<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:jaxws="http://cxf.apache.org/jaxws"
   xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://cxf.apache.org/jaxws 
        http://cxf.apache.org/schemas/jaxws.xsd">

    <jaxws:client name="{http://tutoriales.cdae.uci.cu/Users/}UsersPort" createdFromAPI="true">
        <!-- Uncomment if using WS-SecPolicy method -->
        <jaxws:properties>
            <entry key="ws-security.username" value="jorge"/>        
            <entry key="ws-security.callback-handler" value-ref="myPasswordCallback"/>
        </jaxws:properties>
        
        <!-- Note with above WS-SecPol method you can omit creating
             a client-side callback handler by removing the
             ws-security.callback-handler entry and replacing it with:
             
            <entry key="ws-security.password" value="joespassword"/>
        -->

        <!-- Uncomment if using CXF interceptor method -->
        <!--jaxws:outInterceptors>
            <bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
                <constructor-arg>
                    <map>
                        <entry key="action" value="UsernameToken"/>
                        <entry key="user" value="joe"/>
                        <entry key="passwordType" value="PasswordText"/>
                        <entry key="passwordCallbackRef" value-ref="myPasswordCallback"/>
                    </map>
                </constructor-arg>
            </bean>
        </jaxws:outInterceptors-->
    </jaxws:client>

    <bean id="myPasswordCallback" class="cu.uci.cdae.tutoriales.ClientPasswordCallback"/>

</beans>
